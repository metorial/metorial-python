[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "metorial"
version = "1.0.0"
description = "Python SDK for Metorial - AI-powered tool calling and session management"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Metorial Team", email = "support@metorial.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
keywords = [
    "metorial", "ai", "llm", "openai", "anthropic", "tools", "mcp", 
    "model-context-protocol", "chat", "completions", "sessions"
]
dependencies = [
    "aiohttp>=3.8.0",
    "typing-extensions>=4.0.0",
    "dataclasses; python_version<'3.7'",
]

[project.optional-dependencies]
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.3.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
]
all = ["openai>=1.0.0", "anthropic>=0.3.0"]

[project.urls]
Homepage = "https://metorial.com"
Documentation = "https://metorial.com/docs"
Repository = "https://github.com/metorial/metorial/clients/metorial-py"
Changelog = "https://github.com/metorial/metorial/blob/main/clients/metorial-py/CHANGELOG.md"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | sdk/gen
  | packages/core/mt_2025_01_01_dashboard
  | packages/core/mt_2025_01_01_pulsar
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Generated code may not have types
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "sdk.gen.*"
ignore_errors = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

# Flake8 configuration
[tool.flake8]
max-line-length = 88
select = ["E", "W", "F"]
ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "E501",  # line too long (will be handled manually)
    "E111",  # indentation is not a multiple of four (we use 2 spaces)
    "E114",  # indentation is not a multiple of four (comment)
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".pytest_cache",
    ".mypy_cache",
    "sdk/gen",
    "packages/core/mt_2025_01_01_dashboard",
    "packages/core/mt_2025_01_01_pulsar",
]
